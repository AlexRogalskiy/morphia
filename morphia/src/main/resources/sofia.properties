collection.not.mapped=The collection ''{0}'' is not mapped to a java class.
no.mapped.collection=No collection has been mapped for {0}.  Types must be annotated with @Entity to be mapped to a collection.
not.mappable={0} is not a mappable type. Mappable types need to be annotated with either @Entity or @Embedded.
mixed.projections=Projections cannot mix included and excluded fields together.
mixed.mode.projections=Only one form of projection allowed at a time.
logged.query=logged query: {0}
query.not.logged=No query structure was logged for this query.
persistence.not.intended=This type is not intended for persistence and is unsupported in this context.
invalid.path.target=Could not resolve path ''{0}'' against ''{1}''.
not.null={0} can not be null.
instantiation.problem=Can''t instantiate the type {0}: {1}
unknown.bson.type=unknown type for bson mapping: {0}
not.document.type=Value is not a document type
document.stream.exceeded=No more elements remaining
invalid.bson.operation=Value expected to be of type {0} is of unexpected type {1}
not.document.end=Call to end document made before the end of the document
not.array.end=Call to end array made before the end of the array
cannot.read.name=name() can''t called when iterating List values
invalid.index.path=The path ''{0}'' can not be validated against ''{1}'' and may represent an invalid index
version.manually.set=When versioning entities, the version fields must not be manually given values.
key.not.allowed.as.field=Keys are not allowed as fields.  Use (lazy) references instead.
missing.referenced.entity=Referenced ''{0}'' entity could not be found during a fetch.
missing.referenced.entities=Referenced ''{0}'' entities could not be found during a fetch.

@info.more.than.one.mapper=Found more than one class mapped to collection ''{0}'': {1}
@warn.test.feature.only=This feature is intended for testing and debugging only.
@warn.no.mapped.classes=No classes have been mapped.
@warn.ignoring.transient.field={0} is marked as transient and will not be persisted.
@debug.calling.lifecycle.method=Calling lifecycle method(@{0} {1}) on {2}
@debug.calling.interceptor.method=Calling interceptor method {0} on {1}